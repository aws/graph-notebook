name: Integration Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  generate-stack-name:
    runs-on: ubuntu-latest
    outputs:
      stack-name: ${{ steps.generate-stack-name.outputs.stack-name }}
    steps:
      - name: Generate Stack Name
        id: generate-stack-name
        run: echo "::set-output name=stack-name::$(echo graph-notebook-$RANDOM)"
        shell: bash
  create-stack:
    runs-on: ubuntu-latest
    needs: generate-stack-name
    steps:
      - name: Set up Python 3.6
        uses: actions/setup-python@v2
        with:
          python-version: 3.6
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 3600
          role-session-name: IntegrationTestRunner
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Install
        run: |
          pip install -e .
      - name: Create Stack
        id: create-stack
        run: |
          python test/integration/NeptuneIntegrationWorkflowSteps.py \
            create-cfn-stack \
            --cfn-stack-name ${{ needs.generate-stack-name.outputs.stack-name }} \
            --cfn-template-url ${{ secrets.CFN_TEMPLATE_URL }} \
            --cfn-s3-bucket ${{ secrets.INTEG_CFN_S3_BUCKET }} \
            --cfn-runner-role ${{ secrets.CFN_ROLE }} \
            --aws-region ${{ secrets.AWS_REGION }}
  run-tests:
    runs-on: ubuntu-latest
    needs: [generate-stack-name, create-stack]
    steps:
      - name: Set up Python 3.6
        uses: actions/setup-python@v2
        with:
          python-version: 3.6
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 3600
          role-session-name: IntegrationTestRunner
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Install
        run: |
          pip install -e .
      - name: Give user /etc/hosts permission
        run: |
          sudo chmod 777 /etc/hosts
      - name: Run Basic Tests
        run: |
          python test/integration/NeptuneIntegrationWorkflowSteps.py \
            run-tests \
            --pattern "*without_iam.py" \
            --cfn-stack-name ${{ needs.generate-stack-name.outputs.stack-name }} \
            --aws-region ${{ secrets.AWS_REGION }}
      - name: Run Networkx Tests
        run: |
          python test/integration/NeptuneIntegrationWorkflowSteps.py \
            run-tests \
            --pattern "*network*.py" \
            --cfn-stack-name ${{ needs.generate-stack-name.outputs.stack-name }} \
            --aws-region ${{ secrets.AWS_REGION }}
      - name: Run Notebook Tests
        run: |
          python test/integration/NeptuneIntegrationWorkflowSteps.py \
            run-tests \
            --pattern "*graph_notebook.py" \
            --cfn-stack-name ${{ needs.generate-stack-name.outputs.stack-name }} \
            --aws-region ${{ secrets.AWS_REGION }}
      - name: Run IAM Tests
        env:
          GRAPH_NOTEBOK_CONFIG: /tmp/graph_notebook_config_integration_test.json
        run: |
          python test/integration/NeptuneIntegrationWorkflowSteps.py \
            run-tests \
            --pattern "*with_iam.py" \
            --iam \
            --cfn-stack-name ${{ needs.generate-stack-name.outputs.stack-name }} \
            --aws-region ${{ secrets.AWS_REGION }}
      - name: Cleanup
        run: |
          python test/integration/NeptuneIntegrationWorkflowSteps.py \
            delete-cfn-stack \
            --cfn-stack-name ${{ needs.generate-stack-name.outputs.stack-name }} \
            --aws-region ${{ secrets.AWS_REGION }}